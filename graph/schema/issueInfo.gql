
extend type Query {
  issueInfo(id: String!): IssueInfo,
  issueInfos: [IssueInfo!]!,
}

extend type Mutation {
  issueBook(inp: IssueBook!): IssueInfo,
  returnBook(inp: ReturnBook!): IssueInfo,
  renewBook(inp: RenewBook!): IssueInfo,
}

type IssueInfo {
  id: String!,
  status: IssueStatus!,
  bookID: String!,
  book: Book!,
  issuedByID: String!,
  issuedBy: User!,
  issueDate: Time!,
  returnDate: Time!,
  finePayment: Int!,
}

enum IssueStatus {
  BORROWED,
  RETURNED,
}

input IssueBook {
  bookID: String!,
  issuedByID: String!,
  returnDate: Time!,
}

input ReturnBook {
  id: String!,
}

input RenewBook {
  id: String!,
  returnDate: Time!,
}